#pragma once

#include "wled.h"

static const uint32_t FRAMES_TWITCH_2[4][14][14] PROGMEM = {
{
{0x00a701fb, 0x00a801fc, 0x00a801fb, 0x00ab01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00aa01fe, 0x00a801fc},
{0x00a701fa, 0x00a701fb, 0x00ac01ff, 0x009100db, 0x007200b0, 0x007200b0, 0x007200b0, 0x007200b0, 0x007200b0, 0x007200b0, 0x007200b0, 0x007800b6, 0x009d01ea, 0x00a901fc},
{0x00a601fa, 0x00ac01fe, 0x009401db, 0x005f3077, 0x005d605b, 0x005d605b, 0x00646763, 0x005d605b, 0x005f625e, 0x00636661, 0x005d605b, 0x0020241e, 0x007701b4, 0x00ae01fd},
{0x00aa01fb, 0x009501dc, 0x002c0045, 0x007a8177, 0x00ffffff, 0x00ffffff, 0x00a4a4a4, 0x00fafbfa, 0x00e0e0e0, 0x00b2b3b2, 0x00ffffff, 0x005f635d, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007b01b8, 0x00000000, 0x007c7c7c, 0x00fdfdfd, 0x00f3f3f3, 0x00333333, 0x00e7e7e7, 0x00b0b0b0, 0x00515151, 0x00fdfdfd, 0x005c5f5a, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x007c7c7c, 0x00fdfdfd, 0x00f3f3f3, 0x00414141, 0x00e8e8e8, 0x00b5b5b5, 0x005d5d5d, 0x00fdfdfd, 0x005c5f5a, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x007c7c7c, 0x00fdfdfd, 0x00fafafa, 0x00dddddd, 0x00f8f8f8, 0x00f0f0f0, 0x00e1e1e1, 0x00ffffff, 0x005e615c, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x00808080, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00fcfcfc, 0x00ffffff, 0x00ffffff, 0x00ececec, 0x004a5047, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x005b5b5b, 0x00bababa, 0x00bababa, 0x00f2f2f2, 0x00f9f9f9, 0x00bababa, 0x00bababa, 0x005c5f5a, 0x001b0227, 0x008901cb, 0x00ac01fd},
{0x00ad01fd, 0x007b01b8, 0x00000000, 0x00000000, 0x00000000, 0x00020202, 0x00d4d5d4, 0x008a9087, 0x00000000, 0x00000000, 0x00190027, 0x008401c3, 0x00ac01fe, 0x00a701fc},
{0x00aa01fb, 0x009201db, 0x0054017e, 0x0057007f, 0x00200030, 0x00030403, 0x005f5d60, 0x00520679, 0x0055007f, 0x0054007e, 0x008101c0, 0x00ae01ff, 0x00a701fb, 0x00a801fc},
{0x00a601fa, 0x00a901fd, 0x00af01ff, 0x00b501ff, 0x00410061, 0x00000000, 0x00550083, 0x00aa00fd, 0x00af01ff, 0x00af01ff, 0x00ab01ff, 0x00a701fb, 0x00a801fb, 0x00a801fc},
{0x00a701fa, 0x00a801fb, 0x00a801fb, 0x00ad01fd, 0x00410060, 0x00590185, 0x00a901f9, 0x00a901fc, 0x00a801fb, 0x00a801fb, 0x00a801fb, 0x00a801fb, 0x00a801fb, 0x00a801fc},
{0x00a601f9, 0x00a701fa, 0x00a701fa, 0x00a801fb, 0x009501df, 0x00a301f3, 0x00a901fc, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fb},
},
{
{0x00a701fb, 0x00a801fb, 0x00ac01ff, 0x009800e6, 0x008200c6, 0x008200c6, 0x008200c6, 0x008200c6, 0x008200c6, 0x008200c6, 0x008200c6, 0x008700cc, 0x00a101f0, 0x00a901fd},
{0x00a601fa, 0x00ab01fe, 0x009d01e7, 0x005f217f, 0x0047424a, 0x0047424a, 0x004e4951, 0x0047424a, 0x0049444c, 0x004d484f, 0x0047424a, 0x001d191f, 0x007b01b9, 0x00ad01fd},
{0x00a901fb, 0x009b01e4, 0x00390059, 0x00787e75, 0x00ffffff, 0x00fbfcfb, 0x00b6b7b6, 0x00f7f8f7, 0x00e3e4e3, 0x00c1c2c1, 0x00ffffff, 0x005d615a, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007b01b8, 0x00000000, 0x007c7c7c, 0x00fefefe, 0x00f3f3f3, 0x00353535, 0x00e8e8e8, 0x00b1b1b1, 0x00535353, 0x00fefefe, 0x005c5f5a, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x007c7c7c, 0x00fdfdfd, 0x00f3f3f3, 0x00393939, 0x00e8e8e8, 0x00b2b2b2, 0x00565656, 0x00fdfdfd, 0x005c5f5a, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x007c7c7c, 0x00fdfdfd, 0x00f9f9f9, 0x00cacaca, 0x00f6f6f6, 0x00e8e8e8, 0x00d1d1d1, 0x00ffffff, 0x005d605b, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x007f7f7f, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00fcfcfc, 0x00ffffff, 0x00ffffff, 0x00f5f5f5, 0x0052574f, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x00686868, 0x00d4d4d4, 0x00d2d2d2, 0x00f6f6f6, 0x00fbfbfb, 0x00d3d3d3, 0x00d4d4d4, 0x0071736f, 0x0016081d, 0x008301c4, 0x00ad01fd},
{0x00ad01fd, 0x007b01b8, 0x00000000, 0x00000200, 0x00020501, 0x000b0b0b, 0x00d8d9d8, 0x00a2a79f, 0x00020900, 0x00000500, 0x0013011d, 0x007800b1, 0x00ab01fb, 0x00a801fc},
{0x00aa01fc, 0x008d01d3, 0x0040005f, 0x0041005f, 0x00170023, 0x00030403, 0x00757575, 0x00460d63, 0x003f005e, 0x003e005e, 0x007400ae, 0x00ae01ff, 0x00a801fb, 0x00a801fc},
{0x00a601fa, 0x00a901fd, 0x00ae01ff, 0x00b401ff, 0x00410062, 0x00000000, 0x0045006b, 0x00a700f9, 0x00af01ff, 0x00ae01ff, 0x00ab01ff, 0x00a701fb, 0x00a801fb, 0x00a801fc},
{0x00a701fa, 0x00a801fb, 0x00a801fb, 0x00ae01fd, 0x003b0059, 0x0049016c, 0x00a601f5, 0x00a901fd, 0x00a801fb, 0x00a801fb, 0x00a801fb, 0x00a801fb, 0x00a801fb, 0x00a801fc},
{0x00a701fa, 0x00a801fb, 0x00a801fb, 0x00a901fb, 0x008c01d2, 0x009f01ee, 0x00aa01fd, 0x00a701fb, 0x00a801fb, 0x00a801fb, 0x00a801fb, 0x00a801fb, 0x00a801fb, 0x00a801fc},
{0x00a601f9, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00ab01ff, 0x00a901fd, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fb},
},
{
{0x00a701fb, 0x00a801fc, 0x00a801fb, 0x00ab01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00aa01fe, 0x00a801fc},
{0x00a701fa, 0x00a701fb, 0x00ac01ff, 0x009100db, 0x007200b0, 0x007200b0, 0x007200b0, 0x007200b0, 0x007200b0, 0x007200b0, 0x007200b0, 0x007800b6, 0x009d01ea, 0x00a901fc},
{0x00a601fa, 0x00ac01fe, 0x009401db, 0x005f3077, 0x005d605b, 0x005c5f5b, 0x005c5f5b, 0x005c5f5b, 0x005c5f5b, 0x005c5f5b, 0x005d605b, 0x0020241e, 0x007701b4, 0x00ae01fd},
{0x00aa01fb, 0x009501dc, 0x002c0045, 0x007a8077, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x005f635d, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007b01b8, 0x00000000, 0x007c7c7c, 0x00fdfdfd, 0x00fdfdfd, 0x00fdfdfd, 0x00fbfbfb, 0x00fbfbfb, 0x00fdfdfd, 0x00fefefe, 0x005c5f5a, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x007d7d7c, 0x00fdfdfd, 0x00747474, 0x004f4f4f, 0x00f1f1f1, 0x00cecece, 0x00464646, 0x00a7a7a7, 0x00636762, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x007c7c7c, 0x00fdfdfd, 0x00d7d7d7, 0x00cecece, 0x00f8f8f8, 0x00efefef, 0x00cbcbcb, 0x00e9e9e9, 0x0060635e, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x00808080, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00fcfcfc, 0x00ffffff, 0x00ffffff, 0x00efefef, 0x004a4f46, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x005b5b5b, 0x00bababa, 0x00bababa, 0x00f2f2f2, 0x00f9f9f9, 0x00bababa, 0x00bababa, 0x005c5f5a, 0x001b0227, 0x008901cb, 0x00ac01fd},
{0x00ad01fd, 0x007b01b8, 0x00000000, 0x00000000, 0x00000000, 0x00020202, 0x00d4d5d4, 0x008a9087, 0x00000000, 0x00000000, 0x00190027, 0x008401c3, 0x00ac01fe, 0x00a701fc},
{0x00aa01fb, 0x009201db, 0x0054017e, 0x0057007f, 0x00200030, 0x00030403, 0x005f5d60, 0x00520679, 0x0055007f, 0x0054007e, 0x008101c0, 0x00ae01ff, 0x00a701fb, 0x00a801fc},
{0x00a601fa, 0x00a901fd, 0x00af01ff, 0x00b501ff, 0x00410061, 0x00000000, 0x00550083, 0x00aa00fd, 0x00af01ff, 0x00af01ff, 0x00ab01ff, 0x00a701fb, 0x00a801fb, 0x00a801fc},
{0x00a701fa, 0x00a801fb, 0x00a801fb, 0x00ad01fd, 0x00410060, 0x00590185, 0x00a901f9, 0x00a901fc, 0x00a801fb, 0x00a801fb, 0x00a801fb, 0x00a801fb, 0x00a801fb, 0x00a801fc},
{0x00a601f9, 0x00a701fa, 0x00a701fa, 0x00a801fb, 0x009501df, 0x00a301f3, 0x00a901fc, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fb},
},
{
{0x00a701fb, 0x00a801fc, 0x00a801fc, 0x00a801fc, 0x00a801fc, 0x00a801fc, 0x00a801fc, 0x00a801fc, 0x00a801fc, 0x00a801fc, 0x00a801fc, 0x00a801fc, 0x00a801fc, 0x00a801fd},
{0x00a701fa, 0x00a801fb, 0x00a701fb, 0x00ab01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00ae01ff, 0x00a901fd, 0x00a701fc},
{0x00a701fa, 0x00a701fb, 0x00ae01ff, 0x008700cc, 0x005d0091, 0x005d0091, 0x005e0091, 0x005d0091, 0x005d0091, 0x005d0091, 0x005d0091, 0x00640098, 0x009701e2, 0x00aa01fc},
{0x00a601fa, 0x00ac01fe, 0x008a01cd, 0x00623f73, 0x00797f76, 0x00787f75, 0x007f857c, 0x00797f76, 0x007b8178, 0x007e847b, 0x00797f76, 0x00283024, 0x007501b2, 0x00ae01fd},
{0x00aa01fc, 0x008f01d3, 0x00200032, 0x007b8178, 0x00ffffff, 0x00ffffff, 0x008e8e8e, 0x00f9f9f9, 0x00d8d9d8, 0x00a0a0a0, 0x00ffffff, 0x0060635e, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007b01b8, 0x00000000, 0x007c7c7c, 0x00fdfdfd, 0x00f2f2f2, 0x00333333, 0x00e7e7e7, 0x00b0b0b0, 0x00515151, 0x00fdfdfd, 0x005c5f5a, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x007c7c7c, 0x00fdfdfd, 0x00f3f3f3, 0x004c4c4c, 0x00e9e9e9, 0x00b9b9b9, 0x00666666, 0x00fdfdfd, 0x005c5f5a, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x007c7c7c, 0x00fdfdfd, 0x00fafafa, 0x00ececec, 0x00f9f9f9, 0x00f5f5f5, 0x00eeeeee, 0x00ffffff, 0x005f625d, 0x007200af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x00818181, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00fcfcfc, 0x00ffffff, 0x00ffffff, 0x00e0e0e0, 0x0040463c, 0x007300af, 0x00ae01fd},
{0x00ad01fd, 0x007d01ba, 0x00000000, 0x004d4d4d, 0x009d9d9d, 0x009d9d9d, 0x00eeeeee, 0x00f6f6f6, 0x009e9e9e, 0x009d9d9d, 0x00484c47, 0x00230035, 0x008f01d3, 0x00ab01fd},
{0x00ad01fd, 0x007b01b8, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00d0d0cf, 0x0072786f, 0x00000000, 0x00000000, 0x00220035, 0x009001d2, 0x00ac01ff, 0x00a701fc},
{0x00a901fb, 0x009801e3, 0x0069019d, 0x006d019f, 0x0028003c, 0x00020302, 0x004c464f, 0x00620292, 0x006a009e, 0x0069019d, 0x008c01d1, 0x00ad01ff, 0x00a701fb, 0x00a801fc},
{0x00a601fa, 0x00a901fd, 0x00ae01ff, 0x00b401ff, 0x00410061, 0x00040006, 0x0066009c, 0x00ab00ff, 0x00af01ff, 0x00ae01ff, 0x00ab01ff, 0x00a701fb, 0x00a801fb, 0x00a801fc},
{0x00a601f9, 0x00a701fa, 0x00a701fa, 0x00ad01fd, 0x003d005b, 0x00610190, 0x00ab01fb, 0x00a801fc, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fa, 0x00a701fb},
},
};

static const char TWITCH_2[] PROGMEM = "Twitch 2@Speed;;;2";

uint16_t twitch_2(void) {
  const int num_frames = sizeof(FRAMES_TWITCH_2) / sizeof(FRAMES_TWITCH_2[0]);

  if (SEGENV.step >= num_frames - 1) {
    SEGENV.step = 0;
  } else {
    SEGENV.step += 1;
  }

  for (int y = 0; y < 14; y++) {
    for (int x = 0; x < 14; x++) {
      SEGMENT.setPixelColorXY(x, y, FRAMES_TWITCH_2[SEGENV.step][y][x]);
    }
  }

  return 200;
}
